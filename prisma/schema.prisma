// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id         String       @id @default(uuid())
  title      String
  tmdbid     String
  overview   String
  posterPath String?
  movieScore Int          @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  MovieScore MovieScore[]
}

model User {
  id             String           @id @default(uuid())
  username       String           //@unique
  passwordHash   String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Games          Game[]
  playersInGames PlayersInGames[] @relation(name: "PlayersInGames")
  PlayersInGames PlayersInGames[]
}

model Game {
  id           String           @id @default(uuid())
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  slug         String?          @unique
  isStarted    Boolean          @default(false)
  isKickedOff  Boolean          @default(false)           
  hasEnded     Boolean          @default(false)
  Participants User[]
  MovieScore   MovieScore[]     @relation(name: "MovieScore")
  players      PlayersInGames[]
}

model MovieScore {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  position  Int    
  tmdb      String?
  movieId   String
  movie     Movie    @relation(fields: [movieId], references: [id])
  game      Game     @relation("MovieScore", fields: [gameId], references: [id])
  gameId    String
  likes     Int
  dislikes  Int
}

model PlayersInGames {
  player   User    @relation(fields: [playerId], references: [id])
  playerId String  @id
  game     Game    @relation(fields: [gameId], references: [id])
  gameId   String
  isHost   Boolean
  hasVoted Boolean @default(false)
  User     User?   @relation("PlayersInGames", fields: [userId], references: [id])
  userId   String?
}
